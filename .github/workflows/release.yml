name: Build new release

on:
  push: {}
  schedule:
    - cron:  '0 0 * * *'

env:
  ROOT_DIR: ${{ github.workspace }}

jobs:
  stable:
    runs-on: ubuntu-latest
    steps:
      - name: Find most recent releases
        id: releases
        uses: actions/github-script@0.9.0
        with:
          script: |
            const streamlink_tag_name = await github.repos.listReleases({owner: "streamlink", repo: "streamlink"}).then(releases => releases.data.filter(r => !r.prerelease)[0].tag_name)
            const portable_tag_name = await github.repos.listReleases({owner: context.repo.owner, repo: context.repo.repo}).then(releases => releases.data.filter(r => !r.prerelease)[0].tag_name)
            const result = {streamlink: streamlink_tag_name, portable: portable_tag_name};
            console.log(result);
            return result;

      - name: Checkout streamlink-portable scripts
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        uses: actions/checkout@v2

      # check out a specific streamlink tag
      - name: Check out streamlink ${{ steps.releases.outputs.result.streamlink }}
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        uses: actions/checkout@v2
        with:
          repository: streamlink/streamlink
          path: streamlink
          ref: ${{ steps.releases.outputs.result.streamlink }}

      - uses: actions/setup-python@v1
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        name: Setup Python
        with:
          python-version: 3.6

      - name: Install dependencies
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        run: pip install -U wheel pip

      - name: Build win32 package
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        run: bash ./scripts/makeportable.sh
        env:
          STREAMLINK_PYTHON_VERSION: 3.6.5
          STREAMLINK_PYTHON_ARCH: win32

      - name: Build amd64 package
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        run: bash ./scripts/makeportable.sh
        env:
          STREAMLINK_PYTHON_VERSION: 3.6.5
          STREAMLINK_PYTHON_ARCH: amd64

      - name: Create release ${{ steps.releases.outputs.result.streamlink }}
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.releases.outputs.result.streamlink }}
          release_name: Streamlink Portable ${{ steps.releases.outputs.result.streamlink }}
          draft: false
          prerelease: false

      - name: Upload release artifacts
        if: steps.releases.outputs.result.streamlink != steps.releases.outputs.result.portable
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/streamlink-portable*.zip
          tag: ${{ steps.releases.outputs.result.streamlink }}
          overwrite: true
          file_glob: true
